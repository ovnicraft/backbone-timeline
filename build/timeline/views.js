// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function() {
    var PostEditorView, PostListView, PostView;
    PostView = (function(_super) {

      __extends(PostView, _super);

      function PostView() {
        return PostView.__super__.constructor.apply(this, arguments);
      }

      PostView.prototype.tagName = "li";

      return PostView;

    })(Backbone.extensions.View);
    PostEditorView = (function(_super) {

      __extends(PostEditorView, _super);

      function PostEditorView() {
        return PostEditorView.__super__.constructor.apply(this, arguments);
      }

      PostEditorView.prototype.events = {
        "click .js-send": "sendPost"
      };

      PostEditorView.prototype.sendPost = function(event) {
        var $data, data;
        $data = this.$(".js-data");
        if ($data) {
          data = $data.val() || $data.text();
          if (data) {
            return this.collection.create({
              data: data,
              context: this.context
            }, {
              wait: true
            });
          }
        }
      };

      PostEditorView.prototype.initialize = function(options) {
        PostEditorView.__super__.initialize.call(this, options);
        if (options.context != null) {
          this.context = options.context;
          delete options.context;
        }
        if (options.collection != null) {
          return this.collection = options.collection;
        }
      };

      return PostEditorView;

    })(Backbone.extensions.View);
    PostListView = (function(_super) {

      __extends(PostListView, _super);

      function PostListView() {
        return PostListView.__super__.constructor.apply(this, arguments);
      }

      PostListView.prototype.infiniteScroll = true;

      PostListView.prototype.itemViewClass = PostView;

      PostListView.prototype.initialize = function(options) {
        PostListView.__super__.initialize.call(this, options);
        if (options.context != null) {
          this.context = options.context;
          return delete options.context;
        }
      };

      PostListView.prototype.render = function(manage) {
        PostListView.__super__.render.call(this, manage);
        if (app.session.isActive()) {
          this.setView(".editor", new PostEditorView({
            context: this.context,
            collection: this.collection
          }));
        }
        return manage(this).render();
      };

      return PostListView;

    })(Backbone.extensions.CollectionView);
    return {
      PostView: PostView,
      PostListView: PostListView,
      PostEditorView: PostEditorView
    };
  });

}).call(this);
